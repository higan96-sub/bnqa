<?php

namespace Acme\BnqaBundle\Entity;

use Acme\BnqaBundle\Entity\Report;
use Doctrine\ORM\EntityRepository;
use Symfony\Component\BrowserKit\Response;

/**
 * ReportBookmarkRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReportBookmarkRepository extends EntityRepository
{
  /**
   * @param User $user
   * @param $report_id
   *
   * @throws \Exception
   */
  public function createBookmark(User $user, $report_id)
  {
    $report = $this->getEntityManager()->getRepository('AcmeBnqaBundle:Report')->find($report_id);
      if(!$report){
          throw new \Exception('存在しないレポートです');
      }
    $reportBookmark = $this->getEntityManager()->getRepository('AcmeBnqaBundle:ReportBookmark')->findOneBy(array(
                                                                                                 'reportId'   => $report_id,
                                                                                                 'user' => $user
                                                                                                  ));
    if ($reportBookmark)
    {
      throw new \Exception('既にブックマークが登録されています');
    }

    $reportBookmark = new ReportBookmark();
    $reportBookmark->setReportId($report_id);
    $reportBookmark->setUser($user);

    $bookmarkRepository = $this->getEntityManager();
    $bookmarkRepository->persist($reportBookmark);
    $bookmarkRepository->flush();

      return new Response('success',200);
  }

  /**
   * @param $user_id
   *
   * @return array
   */
  public function countTypeIdByUserId($user_id){
    $sql = "
            SELECT t.name,count(r.id) AS count FROM report_bookmark b
            JOIN report r ON b.report_id = r.id
            JOIN type t ON r.type_id = t.id
            WHERE b.user_id = :user_id GROUP BY r.type_id";
    $stmt = $this->getEntityManager()->getConnection()->prepare($sql);
    $stmt->bindValue("user_id", $user_id);
    $stmt->execute();
    $results = $stmt->fetchAll();

    $sum = 0;
    $ary = array(
      'note'      => 0,
      'question'  => 0,
      'advice'    => 0,
      'quotation' => 0);
    foreach ($results as $result)
    {
      $ary[$result['name']] = $result['count'];
      $sum += $result['count'];
    }
    $ary['sum'] = $sum;

    return $ary;
  }
}
